# -*- coding: utf-8 -*-
"""LinearReg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n0pTe9l1SVkbz62qdKcuOJgnynHVQWkS
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# %matplotlib inline


#Reading Data
df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/headbrain.csv')
print(df.shape)
df.head(5)

#Collecting X and Y

X = df['Head Size(cm^3)'].values
Y = df['Brain Weight(grams)'].values

#Calculating the mean 

mean_x = np.mean(X)
mean_y = np.mean(Y)

#length of values
n = len(X)

#Calculating the slope of regression line
#lets suppose slope of line is 'm' and y-intersept is 'c'

nume = 0
deno = 0

for i in range(n):
  nume += (X[i]-mean_x)*(Y[i]-mean_y)
  deno += (X[i]-mean_x)**2

m = (nume / deno) #slpe of line 

c = mean_y - m*(mean_x)

#print coefficient

print(m,c)

#equation of line

print ('y = ',m,'x + ',c)

#plottting graphs of predicted values

#axis range
x_max = np.max(X) + 100
x_min = np.min(X) - 100

#Calculatting the line values x & y

x = np.linspace(x_min,x_max,1000)
y = m*x + c

#plot the regression line

plt.plot(x,y,color='r',label='Regression Line')

#plotting scatter plot

plt.scatter(X,Y,c='g',marker='o',label='Scatter plot')

plt.xlabel('Head Size(cm^3)')
plt.ylabel('Brain Weight(grams)')
plt.legend()

#Calculating Good will of model
#By using R^2 method

sst_ = 0 
ss_r = 0
for i in range(n):
  y_p = m*X[i] + c
  ss_t += (Y[i] - mean_y) ** 2
  ss_r += (Y[i] - y_p) ** 2 
r2 = 1 - (ss_r/ss_t)
print(r2)